name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-feature=+crt-static"

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ergo-vanitygen
            asset_name: ergo-vanitygen-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ergo-vanitygen.exe
            asset_name: ergo-vanitygen-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ergo-vanitygen
            asset_name: ergo-vanitygen-macos-amd64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install build dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Prepare assets
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
          else
            tar -czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
          fi
          cd ../../..
      
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.asset_name }}.*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}